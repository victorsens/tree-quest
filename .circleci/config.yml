# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run:
          name: Build and unit test
          command: |
            mvn install
      - save_cache:
          paths:
            - ~/.m2
          key: hello-spring-mvn-V2-{{ checksum "pom.xml" }}
      - store_test_results:
          path: target/surefire-reports
  SCM:
    docker:
      - image: circleci/openjdk:11-jdk-browsers
    working_directory: ~/repo
    steps:
      - add_ssh_keys:
            fingerprints:
              - "f8:1f:5d:71:6b:ee:fa:e0:22:33:2f:3d:4d:31:59:1a"
      - checkout
      - restore_cache:
          keys:
            - hello-spring-mvn-V2-{{ checksum "pom.xml" }}
            - hello-spring-mvn-V2
      - run:
          name: Create version and SCM Tags.
          command: |
             git config user.email ${GIT_EMAIL}
             git config user.name ${GIT_USER}
             ./mvnw -DskipTests=true -DscmCommentPrefix='[skip ci]' \
                -Dmaven.javadoc.failOnError=false \
                --batch-mode release:clean \
                release:prepare  -e

  publish-image:
    docker:
      - image: circleci/openjdk:11-jdk-browsers
    working_directory: ~/repo
    steps:
     - checkout
     - restore_cache:
         keys:
           - hello-spring-mvn-V2-{{ checksum "pom.xml" }}
           - hello-spring-mvn-V2
     - run:
         name: build and push container
         command: |
           export PROJECT_VERSION=$( ./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout  | sed 's/-SNAPSHOT//')
           echo $PROJECT_VERSION
           cp .mvn/wrapper/settings.xml ~/.m2/settings.xml
           echo "<settingsSecurity><master>${maven_security_master}</master></settingsSecurity>" > ~/.m2/settings-security.xml
           ./mvnw compile jib:build -DskipTests=true \
              -Ddocker.tag=$PROJECT_VERSION \
              -Dbuild.num=$CIRCLE_WORKFLOW_ID
  deploy:
    docker:
      - image: victorsens/gcp_setup:latest
    description: Deploy application to Google Kubernetes Engine
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Deploy images to the cluster.
          command: |
            /gcp/authenticate_serive_account.sh
            cd ./k8s/
            kustomize edit set image ${PROJECT_IMAGE}$CIRCLE_WORKFLOW_ID
            cat kustomization.yml
            kustomize build > ./kustomized-deployment.yaml
            cat ./kustomized-deployment.yaml
            kubectl apply -f ./kustomized-deployment.yaml
            kubectl rollout status deployment/tree-quest-backend
          environment:
             PROJECT_IMAGE: registry.hub.docker.com/victorsens/tree-quest:circle_ci_build_
             CLUSTER_NAMESPACE: default
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - publish-image:
            context: GIT_CONFIGURATION
            requires:
              - build
      - SCM:
            context: GIT_CONFIGURATION
            requires:
              - publish-image
            filters:
              branches:
                only: master
      - deploy:
            context: GCP_CONFIGURATION
            requires:
              - publish-image
            filters:
              branches:
                only: master
